class Node:
    def __init__(self, data):
        self.data = data
        self.next = None

class LinkedList:

    def __init__(self):
        self.head = None

    def traverse(self, node):
        while node:
            print(node.data, end=" -> ")
            node = node.next

class DoublyLinkedList:

    def __init__(self):
        self.head = None

    def traverse(self, node):
        while node:
            print(node.data, end=" -> ")
            node = node.next

class CircularLinkedList:

    def __init__(self):
        self.head = None

    def traverse(self, node):

        head = node

        while node:
            print(node.data, end=" -> ")
            node = node.next

            # Break to prevent infinite loop
            if node == head:
                break

1. Create a Singly Linked list
Each node should contain your name and your seatmates
Create at least 5 nodes
Traverse all nodes
[ ]

linked_list = LinkedList()
linked_list.head = Node("Iber")
node_2 = Node("Robbie")
node_3 = Node("Dhan")
node_4 = Node("Angelo")
node_5 = Node("Jassy")
node_6 = Node("Jessy")
node_7 = Node("Boybie")
node_8 = Node("Kalli")

linked_list.head.next = node_2
node_2.next = node_3
node_3.next = node_4
node_4.next = node_5
node_5.next = node_6
node_6.next = node_7
node_7.next = node_8
node_8.next = None

linked_list.traverse(linked_list.head)

2. Create a Doubly Linked list
Each node should contain your name and your seatmates
Create at least 5 nodes
Traverse all nodes

doubly_linked_list = DoublyLinkedList()
doubly_linked_list.head = Node("Iber")
node_2 = Node("Robbie")
node_3 = Node("Dhan")
node_4 = Node("Angelo")
node_5 = Node("Jassy")
node_6 = Node("Jessy")
node_7 = Node("Boybie")
node_8 = Node("Kalli")

doubly_linked_list.head.prev = None
doubly_linked_list.head.next = node_2

node_2.prev = doubly_linked_list.head
node_2.next = node_3

node_3.prev = node_2
node_3.next = node_4

node_4.prev = node_3
node_4.next = node_5

node_5.prev = node_4
node_5.next = node_6

node_6.prev = node_5
node_6.next = node_7

node_7.prev = node_6
node_7.next = node_8

node_8.prev = node_7
node_8.next = None

doubly_linked_list.traverse(doubly_linked_list.head)

3. Create a Circular Linked list
Each node should contain your name and your seatmates
Create at least 5 nodes
Traverse all nodes

circular_linked_list = CircularLinkedList()
circular_linked_list.head = Node("Iber")
node_2 = Node("Robbie")
node_3 = Node("Dhan")
node_4 = Node("Angelo")
node_5 = Node("Jassy")
node_6 = Node("Jessy")
node_7 = Node("Boybie")
node_8 = Node("Kalli")

circular_linked_list.head.next = node_2
node_2.next = node_3
node_3.next = node_4
node_4.next = node_5
node_5.next = node_6
node_6.next = node_7
node_7.next = node_8
node_8.next = circular_linked_list.head

circular_linked_list.traverse(circular_linked_list.head)
